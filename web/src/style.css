@import url("https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css");

:root {
  --primary-color: #007bff;
  --primary-color-dark: #0056b3;
  --secondary-color: #6c757d;
  --success-color: #28a745;
  --danger-color: #dc3545;
  --warning-color: #ffc107;
  --info-color: #17a2b8;
  --light-color: #f8f9fa;
  --dark-color: #343a40;
  --text-color: #212529;
  --background-color: #eef2f7; /* Light grayish blue background */
  --card-background: #ffffff;
  --border-color: #dee2e6;
  --border-radius: 0.3rem;
  --box-shadow: 0 0.125rem 0.25rem rgba(0,0,0,0.075);

  /* Default font settings from original style.css, can be adjusted */
  font-family: system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;
  
  color-scheme: light; /* Forcing light scheme based on these variables */
  /* color: var(--text-color); /* Set default text color */
  /* background-color: var(--background-color); /* Set default background color */

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

body {
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; /* More specific font from app */
  margin: 0;
  background-color: var(--background-color);
  color: var(--text-color);
  line-height: 1.6; /* From app styles */
  font-size: 16px; /* From app styles */
  display: block; /* Override vite default flex for body */
  /* place-items: initial; */ /* Override vite default */
  min-width: initial; /* Override vite default */
}

#app { /* Styles for the main app container div */
  /* max-width: 1280px; /* Can retain or adjust if needed */
  /* margin: 0 auto; */ /* Can retain or adjust */
  /* padding: 0; /* Remove Vite default padding if layout is handled by App.vue */
  /* text-align: left; /* Override Vite default center */
}


/* Global App Structure - if #app-container is consistently used */
/* These were in LiveMapView, making them global if desired */
/*
#app-container {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}

.app-header-global { 
  background-color: var(--primary-color);
  color: white;
  padding: 0.8rem 1.5rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}
.app-header-global .logo-title {
  display: flex;
  align-items: center;
}
.app-header-global .logo-icon {
  height: 40px;
  margin-right: 10px;
}
.app-header-global h1 {
  margin: 0;
  font-size: 1.5rem;
  font-weight: 600;
}
.app-header-global .header-controls {
  display: flex;
  align-items: center;
  gap: 0.8rem;
}

.main-content-global {
  flex-grow: 1;
  padding: 1.5rem;
  display: flex;
  flex-direction: column;
  gap: 1.5rem; 
}

.app-footer-global {
  background-color: var(--dark-color);
  color: var(--light-color);
  text-align: center;
  padding: 0.8rem;
  font-size: 0.85rem;
}
*/

/* General Card Styling */
.card {
  background-color: var(--card-background);
  border-radius: var(--border-radius);
  box-shadow: var(--box-shadow);
  border: 1px solid var(--border-color);
  margin-bottom: 1.5rem; /* Add some default bottom margin to cards */
}

.card-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0.8rem 1.2rem;
  background-color: #f7f9fc; 
  border-bottom: 1px solid var(--border-color);
  border-top-left-radius: var(--border-radius);
  border-top-right-radius: var(--border-radius);
}
.card-header h2, .card-header h3 { /* Include h3 for consistency */
  margin: 0;
  font-size: 1.2rem;
  color: var(--primary-color-dark);
}
.card-header h2 .fas, .card-header h3 .fas {
  margin-right: 0.5rem;
}

/* General Button Styling - Overriding Vite defaults */
button, 
.button, /* Generic button class */
.button-primary, 
.button-secondary, 
.button-success, 
.button-danger {
  padding: 0.5rem 1rem;
  border: 1px solid transparent; /* Default border */
  border-radius: var(--border-radius);
  cursor: pointer;
  font-size: 0.9rem;
  font-family: inherit; /* Inherit from body */
  font-weight: 500; /* Match Vite button style */
  transition: background-color 0.2s ease, box-shadow 0.2s ease, border-color 0.2s ease;
  display: inline-flex;
  align-items: center;
  gap: 0.4rem; 
  text-decoration: none; 
  color: white; /* Default text color for colored buttons */
  background-color: var(--primary-color); /* Default to primary */
}

button:hover,
.button:hover,
.button-primary:hover, 
.button-secondary:hover, 
.button-success:hover, 
.button-danger:hover {
  opacity: 0.9; /* Keep opacity for colored ones */
  /* border-color: var(--primary-color-dark); /* Darken border on hover for default */
  box-shadow: 0 2px 5px rgba(0,0,0,0.15);
}
button:disabled, .button:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  /* background-color: #ccc; /* Optional: specific disabled background */
  /* color: #777; */
}

.button-primary { background-color: var(--primary-color); border-color: var(--primary-color); color: white; }
.button-secondary { background-color: var(--secondary-color); border-color: var(--secondary-color); color: white; }
.button-success { background-color: var(--success-color); border-color: var(--success-color); color: white; }
.button-danger { background-color: var(--danger-color); border-color: var(--danger-color); color: white; }

/* Button that looks like a link */
.button-link {
  background: none;
  border: none;
  color: var(--primary-color);
  cursor: pointer;
  text-decoration: underline;
  padding: 5px;
  font-size: 0.9em;
}
.button-link:hover {
  color: var(--primary-color-dark);
  background-color: transparent; /* Ensure no background on hover */
  box-shadow: none;
}


.button-small {
  padding: 0.3rem 0.7rem;
  font-size: 0.8rem;
}

/* Status Message Styling (used in config views) */
.status-display { /* Renamed for clarity from config-status-display */
  padding: 0.8rem 1.2rem;
  margin: 0.8rem 0; /* Adjusted margin to be applied where used, not globally to all cards content */
  border-radius: var(--border-radius);
  font-size: 0.95rem;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}
.status-display.success { background-color: #e6ffed; border-left: 4px solid var(--success-color); color: #1d6c32; }
.status-display.info { background-color: #e7f3ff; border-left: 4px solid var(--info-color); color: #0c5460; }
.status-display.error { background-color: #fff3f3; border-left: 4px solid var(--danger-color); color: #721c24; }
.status-display.warning { background-color: #fff8e1; border-left: 4px solid var(--warning-color); color: #665120; }


/* MQTT Status Indicator specific styles (from LiveMapView) */
.mqtt-status-indicator {
  padding: 0.3rem 0.7rem;
  border-radius: var(--border-radius);
  font-size: 0.85rem;
  color: white;
  display: inline-flex;
  align-items: center;
  gap: 0.3rem;
}
.mqtt-status-indicator.success { background-color: var(--success-color); }
.mqtt-status-indicator.warn { background-color: var(--warning-color); color: #333; } 
.mqtt-status-indicator.error { background-color: var(--danger-color); }
.mqtt-status-indicator.info { background-color: var(--info-color); }

/* Connection status text (used in LiveMapView WS status) */
.status-connected { color: var(--success-color); font-weight: bold; }
.status-disconnected { color: var(--danger-color); font-weight: bold; }

/* General form styling */
input[type="text"],
input[type="number"],
input[type="password"],
input[type="email"],
textarea,
select {
  width: calc(100% - 18px); /* Account for padding and border */
  padding: 8px;
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
  font-size: 0.9rem;
  margin-bottom: 0.5rem; /* Default spacing below inputs */
  box-sizing: border-box;
}
textarea {
  min-height: 100px;
  font-family: monospace;
}
label {
  display: block;
  margin-bottom: 0.3rem;
  font-weight: 500;
  font-size: 0.9rem;
}

/* Utility classes */
.text-danger { color: var(--danger-color); }
.text-success { color: var(--success-color); }
.text-warning { color: var(--warning-color); }
.text-info { color: var(--info-color); }

/* Ensure html and body take full height for flex layouts if #app is main container */
html, body {
  height: 100%;
}
#app { /* If #app is the direct child of body and root of Vue app */
    min-height: 100%;
    display: flex; /* If App.vue's root is intended to be flex container */
    flex-direction: column; /* If App.vue's root is intended to be flex container */
}
